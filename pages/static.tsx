import React from 'react';
import Head from 'next/head';
import Image from 'next/image';
import styles from 'styles/Home.module.css';
import { useSession } from 'next-auth/client';

type StaticProps = {
  content: string[];
};

export default function StaticExample(props: StaticProps) {
  const [session] = useSession();

  return (
    <div className={styles.container}>
      <Head>
        <title>Static Page Example</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <h3>This is a statically rendered, super fast page</h3>

        <p className={styles.description}>
          Explore this page at{' '}
          <code className={styles.code}>pages/static.tsx</code>
        </p>

        <p>
          <b>
            <code className={styles.code}>{JSON.stringify(props.content)}</code>
          </b>
        </p>

        <p>
          And even though this page was rendered statically - this user session
          is served dynamically
        </p>
        <code className={styles.code}>
          {JSON.stringify(session?.user || 'no user')}
        </code>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer">
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}

export async function getStaticProps(): Promise<{
  props: StaticProps;
}> {
  return {
    props: {
      content: [
        'this',
        'data',
        'was',
        'generated',
        'at',
        'build',
        'time',
        '!',
        'üöÄüî•ü§òüèº',
      ],
    },
  };
}
